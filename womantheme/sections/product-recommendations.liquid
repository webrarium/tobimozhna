<div class="container">
    <div
    class="product-recommendations"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=3&intent=related"
    >
    {%- if recommendations.performed? and recommendations.products_count > 0 -%}
        {% if recommendations.intent == 'related' %}
        <h2>{{ 'product.recommendations.heading_related' | t }}</h2>
        {% elsif recommendations.intent == 'complementary' %}
        <h2>{{ 'product.recommendations.heading_complementary' | t }}</h2>
        {% endif %}

        <div class="recommendations-products-wrp">
        {%- for product in recommendations.products -%}
            <div class="product-card">
            <a href="{{ product.url | within: collections.all }}">
                <img
                class="product__img"
                src="{{ product.featured_image | image_url: width: 400, height: 400 }}"
                alt="{{ product.featured_image.alt }}"
                />

                <p class="product__title">{{ product.title }}</p>
                <p class="product__price">{{ product.price | money}}</p>
            </a>
            </div>
        {%- endfor -%}
        </div>
    {%- endif -%}
    </div>
</div>
{% javascript %}
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

  observer.observe(productRecommendationsSection);
{% endjavascript %}

{% schema %}
  {
    "name": "Product recommendations",
    "settings": []
  }
{% endschema %}
